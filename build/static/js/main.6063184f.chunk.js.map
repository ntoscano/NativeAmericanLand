{"version":3,"sources":["populationData.csv","MapChart.js","App.js","index.js"],"names":["module","exports","percentChange","prev","next","x","parseInt","Math","floor","MapChart","useState","appStateData","setAppStateData","tribe","setTribe","statesSlect","setState","stateColumnData","setStateColumnData","selection","setSelection","useEffect","csv","populationData","then","population","stateData","tribeData","columns","map","col","y1990","y2000","y2010","row","state","Object","keys","year","console","log","metaData","totalPopulation","change","largestGrowth","largestDecline","stateTribe","y2000PercentChange","y2010PercentChange","yearPopulation","totalGrowth","growth","push","region","isCounty","displayStateLandData","displayTribeLandData","isSelected","regionName","className","href","title","style","height","sort","index","key","onClick","slice","chartType","options","resolution","colorAxis","colors","backgroundColor","defaultColor","data","mapsApiKey","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6063184f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/populationData.100f0aff.csv\";","import React, { useState, useEffect } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport { ColumnChart } from 'react-chartkick'\nimport { Chart } from \"react-google-charts\";\nimport populationData from \"./populationData.csv\"\nimport 'chart.js'\n\n\nconst percentChange = (prev, next) => {\n\tconst x = parseInt(next) / parseInt(prev);\n\treturn Math.floor(((parseInt(next) > parseInt(prev) ? x - 1 : (1 - x) * -1)) * 100);\n}\n\n\nconst MapChart = () => {\n\tconst [appStateData, setAppStateData] = useState(false);\n\tconst [tribe, setTribe] = useState(\"Apache\");\n\tconst [statesSlect, setState] = useState(true);\n\tconst [stateColumnData, setStateColumnData] = useState([\"State\", \"Population\"]);\n\tconst [tribeColumnData, setTribeColumnData] = useState([\"State\", \"Population\"]);\n\tconst [selection, setSelection] = useState(\"y1990\");\n\n\n\tuseEffect(() => {\n\t\tcsv(populationData).then(population => {\n\t\t\tconst stateData = {};\n\t\t\tconst tribeData = {};\n\t\t\tpopulation.columns.map((col) => {\n\t\t\t\tif (col !== \"year\" && col !== \"state\") {\n\t\t\t\t\ttribeData[col] = {\n\t\t\t\t\t\ty1990: {}, y2000: {}, y2010: {}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t});\n\t\t\tpopulation.map((row) => {\n\t\t\t\tif (!stateData[row.state]) {\n\t\t\t\t\tstateData[row.state] = {};\n\t\t\t\t}\n\t\t\t\tObject.keys(row).map((col) => {\n\t\t\t\t\tif (tribeData[col]) {\n\t\t\t\t\t\ttribeData[col][`y${row.year}`][row.state] = row[col];\n\t\t\t\t\t\tif (stateData[row.state][col]) {\n\t\t\t\t\t\t\tstateData[row.state][col][`y${row.year}`] = row[col];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstateData[row.state][col] = { [`y${row.year}`]: row[col] };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t});\n\t\t\tconsole.log(stateData, tribeData);\n\n\t\t\tObject.keys(stateData).map((state) => {\n\t\t\t\tstateData[state].metaData = {\n\t\t\t\t\ttotalPopulation: {\n\t\t\t\t\t\ty1990: 0,\n\t\t\t\t\t\ty2000: 0,\n\t\t\t\t\t\ty2010: 0\n\t\t\t\t\t},\n\t\t\t\t\tchange: {\n\t\t\t\t\t\ty2000: {\n\t\t\t\t\t\t\tpercentChange: 0,\n\t\t\t\t\t\t\tlargestGrowth: 0,\n\t\t\t\t\t\t\tlargestDecline: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\ty2010: {\n\t\t\t\t\t\t\tpercentChange: 0,\n\t\t\t\t\t\t\tlargestGrowth: 0,\n\t\t\t\t\t\t\tlargestDecline: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tObject.keys(stateData[state]).map((stateTribe) => {\n\t\t\t\t\t// console.log(parseInt(stateData[state][stateTribe].y1990), stateData[state][stateTribe].y1990)\n\t\t\t\t\tstateData[state].metaData.totalPopulation.y1990 += parseInt(stateData[state][stateTribe].y1990) || 0;\n\t\t\t\t\tstateData[state].metaData.totalPopulation.y2000 += parseInt(stateData[state][stateTribe].y2000) || 0;\n\t\t\t\t\tstateData[state].metaData.totalPopulation.y2010 += parseInt(stateData[state][stateTribe].y2010) || 0;\n\t\t\t\t\tconst y2000PercentChange = percentChange(stateData[state][stateTribe].y1990, stateData[state][stateTribe].y2000);\n\t\t\t\t\tconst y2010PercentChange = percentChange(stateData[state][stateTribe].y2000, stateData[state][stateTribe].y2010);\n\t\t\t\t\tif (stateData[state].metaData.change.y2000.largestGrowth === 0) {\n\t\t\t\t\t\tstateData[state].metaData.change.y2000.largestGrowth = [stateTribe, y2000PercentChange];\n\t\t\t\t\t}\n\t\t\t\t\tif (stateData[state].metaData.change.y2010.largestGrowth === 0) {\n\t\t\t\t\t\tstateData[state].metaData.change.y2010.largestGrowth = [stateTribe, y2010PercentChange];\n\t\t\t\t\t}\n\t\t\t\t\tif (stateData[state].metaData.change.y2000.largestDecline === 0) {\n\t\t\t\t\t\tstateData[state].metaData.change.y2000.largestDecline = [stateTribe, y2000PercentChange];\n\t\t\t\t\t}\n\t\t\t\t\tif (stateData[state].metaData.change.y2010.largestDecline === 0) {\n\t\t\t\t\t\tstateData[state].metaData.change.y2010.largestDecline = [stateTribe, y2010PercentChange]\n\t\t\t\t\t}\n\t\t\t\t\tstateData[state].metaData.change.y2000.largestGrowth = y2000PercentChange > stateData[state].metaData.change.y2000.largestGrowth[1] ? [stateTribe, y2000PercentChange] : stateData[state].metaData.change.y2000.largestGrowth;\n\t\t\t\t\tstateData[state].metaData.change.y2010.largestGrowth = y2010PercentChange > stateData[state].metaData.change.y2010.largestGrowth[1] ? [stateTribe, y2010PercentChange] : stateData[state].metaData.change.y2010.largestGrowth;\n\t\t\t\t\tstateData[state].metaData.change.y2000.largestDecline = y2000PercentChange < stateData[state].metaData.change.y2000.largestDecline[1] ? [stateTribe, y2000PercentChange] : stateData[state].metaData.change.y2000.largestDecline;\n\t\t\t\t\tstateData[state].metaData.change.y2010.largestDecline = y2010PercentChange < stateData[state].metaData.change.y2010.largestDecline[1] ? [stateTribe, y2010PercentChange] : stateData[state].metaData.change.y2010.largestDecline;\n\t\t\t\t\treturn;\n\t\t\t\t});\n\t\t\t\tstateData[state].metaData.change.y2000.percentChange = percentChange(stateData[state].metaData.totalPopulation.y1990, stateData[state].metaData.totalPopulation.y2000);\n\t\t\t\tstateData[state].metaData.change.y2010.percentChange = percentChange(stateData[state].metaData.totalPopulation.y2000, stateData[state].metaData.totalPopulation.y2010);\n\t\t\t\treturn;\n\t\t\t});\n\n\t\t\tObject.keys(tribeData).map((tribe) => {\n\t\t\t\ttribeData[tribe].metaData = {\n\t\t\t\t\ttotalPopulation: {\n\t\t\t\t\t\ty1990: 0,\n\t\t\t\t\t\ty2000: 0,\n\t\t\t\t\t\ty2010: 0\n\t\t\t\t\t},\n\t\t\t\t\tchange: {\n\t\t\t\t\t\tlargestGrowth: 0,\n\t\t\t\t\t\ty2000: {\n\t\t\t\t\t\t\tpercentChange: 0,\n\t\t\t\t\t\t\tlargestGrowth: 0,\n\t\t\t\t\t\t\tlargestDecline: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\ty2010: {\n\t\t\t\t\t\t\tpercentChange: 0,\n\t\t\t\t\t\t\tlargestGrowth: 0,\n\t\t\t\t\t\t\tlargestDecline: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tObject.keys(tribeData[tribe]).map((year) => {\n\t\t\t\t\tif (year !== \"metaData\") {\n\t\t\t\t\t\tlet yearPopulation = 0;\n\t\t\t\t\t\tObject.keys(tribeData[tribe][year]).map((state) => {\n\t\t\t\t\t\t\tyearPopulation += parseInt(tribeData[tribe][year][state]);\n\t\t\t\t\t\t})\n\t\t\t\t\t\ttribeData[tribe].metaData.totalPopulation[year] = yearPopulation;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\tObject.keys(stateData).map((state) => {\n\t\t\t\t\tconst y2000PercentChange = percentChange(tribeData[tribe].y1990[state], tribeData[tribe].y2000[state]);\n\t\t\t\t\tconst y2010PercentChange = percentChange(tribeData[tribe].y2000[state], tribeData[tribe].y2010[state]);\n\t\t\t\t\tconst totalGrowth = percentChange(tribeData[tribe].y1990[state], tribeData[tribe].y2010[state]);\n\t\t\t\t\tif (tribeData[tribe].metaData.change.y2000.largestGrowth === 0) {\n\t\t\t\t\t\ttribeData[tribe].metaData.change.y2000.largestGrowth = [state, y2000PercentChange];\n\t\t\t\t\t}\n\t\t\t\t\tif (tribeData[tribe].metaData.change.y2010.largestGrowth === 0) {\n\t\t\t\t\t\ttribeData[tribe].metaData.change.y2010.largestGrowth = [state, y2010PercentChange];\n\t\t\t\t\t}\n\t\t\t\t\tif (tribeData[tribe].metaData.change.y2000.largestDecline === 0) {\n\t\t\t\t\t\ttribeData[tribe].metaData.change.y2000.largestDecline = [state, y2000PercentChange];\n\t\t\t\t\t}\n\t\t\t\t\tif (tribeData[tribe].metaData.change.y2010.largestDecline === 0) {\n\t\t\t\t\t\ttribeData[tribe].metaData.change.y2010.largestDecline = [state, y2010PercentChange];\n\t\t\t\t\t}\n\t\t\t\t\tif (tribeData[tribe].metaData.change.largestGrowth === 0) {\n\t\t\t\t\t\ttribeData[tribe].metaData.change.largestGrowth = [state, totalGrowth];\n\t\t\t\t\t}\n\t\t\t\t\ttribeData[tribe].metaData.change.y2000.largestGrowth = y2000PercentChange > tribeData[tribe].metaData.change.y2000.largestGrowth[1] ? [state, y2000PercentChange] : tribeData[tribe].metaData.change.y2000.largestGrowth;\n\t\t\t\t\ttribeData[tribe].metaData.change.y2010.largestGrowth = y2010PercentChange > tribeData[tribe].metaData.change.y2010.largestGrowth[1] ? [state, y2010PercentChange] : tribeData[tribe].metaData.change.y2010.largestGrowth;\n\t\t\t\t\ttribeData[tribe].metaData.change.y2000.largestDecline = y2000PercentChange < tribeData[tribe].metaData.change.y2000.largestDecline[1] ? [state, y2000PercentChange] : tribeData[tribe].metaData.change.y2000.largestDecline;\n\t\t\t\t\ttribeData[tribe].metaData.change.y2010.largestDecline = y2010PercentChange < tribeData[tribe].metaData.change.y2000.largestDecline[1] ? [state, y2010PercentChange] : tribeData[tribe].metaData.change.y2010.largestDecline;\n\n\t\t\t\t\ttribeData[tribe].metaData.change.largestGrowth = totalGrowth > tribeData[tribe].metaData.change.largestGrowth[1] ? [state, totalGrowth] : tribeData[tribe].metaData.change.largestGrowth;\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\ttribeData[tribe].metaData.change.y2000.percentChange = percentChange(tribeData[tribe].metaData.totalPopulation.y1990, tribeData[tribe].metaData.totalPopulation.y2000);\n\t\t\t\ttribeData[tribe].metaData.change.y2010.percentChange = percentChange(tribeData[tribe].metaData.totalPopulation.y2000, tribeData[tribe].metaData.totalPopulation.y2010);\n\t\t\t\ttribeData[tribe].metaData.totalPopulation.growth = percentChange(tribeData[tribe].metaData.totalPopulation.y1990, tribeData[tribe].metaData.totalPopulation.y2010);\n\t\t\t\treturn;\n\t\t\t});\n\n\n\t\t\tconst stateColumnData = [[\"State\", \"Population\"]]\n\t\t\tObject.keys(stateData).map((state) => {\n\t\t\t\tstateColumnData.push([state, parseInt(stateData[state].metaData.totalPopulation[selection])]);\n\t\t\t});\n\t\t\tsetStateColumnData(stateColumnData);\n\n\t\t\tsetAppStateData({ tribeData, stateData });\n\t\t\treturn { tribeData, stateData };\n\t\t});\n\t}, []);\n\n\tconst displayStateLandData = (selection) => {\n\t\tconst stateColumnData = [[\"State\", \"Population\"]]\n\t\tObject.keys(appStateData.stateData).map((state) => {\n\t\t\tif (parseInt(appStateData.stateData[state].metaData.totalPopulation[selection])) {\n\t\t\t\tstateColumnData.push([state, parseInt(appStateData.stateData[state].metaData.totalPopulation[selection])]);\n\t\t\t}\n\t\t});\n\t\tsetStateColumnData(stateColumnData);\n\t\tsetState(true);\n\t\treturn;\n\t}\n\n\tconst displayTribeLandData = (selection) => {\n\t\tconst stateColumnData = [[\"State\", \"Population\"]];\n\t\tObject.keys(appStateData.stateData).map((state) => {\n\t\t\tconsole.log(appStateData.stateData, state, tribe)\n\t\t\tif (parseInt(appStateData.stateData[state][tribe][selection])) {\n\t\t\t\tstateColumnData.push([state, parseInt(appStateData.stateData[state][tribe][selection])]);\n\t\t\t}\n\t\t});\n\t\tsetStateColumnData(stateColumnData);\n\t\tsetState(false);\n\t\treturn;\n\t}\n\n\n\tconst isSelected = (regionName) => {\n\t\treturn (regionName === tribe) ? \" bg-light-gray \" : \"\";\n\t}\n\n\tconst sideNav = (region, isCounty) => {\n\t\treturn (\n\t\t\t<div className={\"flex-column h-100 overflow-hidden mb4 pb2 f4\"}>\n\t\t\t\t<div className={\"h-100\" + (isCounty ? \" overflow-y-scroll ba f6\" : \"\")}>\n\t\t\t\t\t{Object.keys(region).sort().map((regionName, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={index} className={\" ma2 pa2 tl bb \" + isSelected(regionName)} onClick={() => {\n\t\t\t\t\t\t\t\tsetTribe(regionName);\n\t\t\t\t\t\t\t\tdisplayTribeLandData(selection);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t{regionName}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tif (!appStateData || !appStateData.stateData) {\n\t\treturn (<div>loading</div>);\n\t}\n\tconsole.log(stateColumnData, appStateData)\n\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<div className=\"bg-black-90 fixed w-100 ph3 pv3 pv4-ns ph4-m ph5-l absolute\">\n\t\t\t\t<nav className=\"f6 fw6 ttu tracked\">\n\t\t\t\t\t<a className=\"link dim white dib mr3\" href=\"#\" title=\"head\">Native American Populations</a>\n\t\t\t\t</nav>\n\t\t\t</div>\n\t\t\t<div className=\"w-100\">\n\t\t\t\t<div className=\"flex mt6 tc justify-center\"></div>\n\t\t\t\t<div className=\"flex w-100 mb5\">\n\t\t\t\t\t<div className={\"w-20 f3 mh2 h-100 \"} style={{ height: \"900px\" }}>\n\t\t\t\t\t\t{sideNav(appStateData.tribeData, true)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"w-90 mh3 dib\">\n\t\t\t\t\t\t<div className=\"f3 mb3 tc mt2 justify-center relative\">{statesSlect ? `All Nations - ${selection.slice(1)}` : `${tribe} - ${selection.slice(1)}`}</div>\n\t\t\t\t\t\t<div className={\"ba mh3 tc justify-center relative\" + (!statesSlect ? \" bg-light-gray \" : \"\")} onClick={() => {\n\t\t\t\t\t\t\tsetSelection(\"y2010\")\n\t\t\t\t\t\t\tdisplayStateLandData(selection);\n\t\t\t\t\t\t}}> View Population of all Nations</div>\n\t\t\t\t\t\t<div className=\"mt6 tl mh2\">\n\t\t\t\t\t\t\t<div className=\"flex ba1 b--black bw1\">\n\t\t\t\t\t\t\t\t<div className=\"flex-column w-60\">\n\t\t\t\t\t\t\t\t\t<div className=\"mv2 pv1 bg-light-gray\">Nation:</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mv2 pv1\">Population Growth from 1990 - 2010: </div>\n\t\t\t\t\t\t\t\t\t<div className=\"mv2 pv1 bg-light-gray\">Location and Percent of Largest Growth:</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"flex-column w-40\">\n\t\t\t\t\t\t\t\t\t<div className=\"mv2 pv1 bg-light-gray\"> {tribe}</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mv2 pv1\">{appStateData.tribeData[tribe].metaData.totalPopulation.growth}%</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mv2 pv1 bg-light-gray\t\">\n\t\t\t\t\t\t\t\t\t\t{appStateData.tribeData[tribe].metaData.change.largestGrowth[1]}% - {appStateData.tribeData[tribe].metaData.change.largestGrowth[0]}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"mt5 dib w-50\"}>\n\t\t\t\t\t\t\t{<Chart chartType=\"GeoChart\" options={{ resolution: 'provinces', region: \"US\", colorAxis: { colors: ['#00853f', 'black', '#e31b23'] }, backgroundColor: '#81d4fa', defaultColor: '#f5f5f5' }} data={stateColumnData} mapsApiKey=\"AIzaSyDoLW0la28ndzPjo2B0BybPZpJRi6vmbqI\" />}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t<div className=\"flex mt3 justify-center\">\n\t\t\t\t\t\t\t\t<div className={\"w-20 ba mh3 \" + (selection === \"y1990\" ? \" bg-light-gray \" : \"\")} onClick={() => {\n\t\t\t\t\t\t\t\t\tsetSelection(\"y1990\")\n\t\t\t\t\t\t\t\t\tif (statesSlect) {\n\t\t\t\t\t\t\t\t\t\tdisplayStateLandData(selection);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tdisplayTribeLandData(selection);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}>1990</div>\n\t\t\t\t\t\t\t\t<div className={\"w-20 ba mh3 \" + (selection === \"y2000\" ? \" bg-light-gray \" : \"\")} onClick={() => {\n\t\t\t\t\t\t\t\t\tsetSelection(\"y2000\")\n\t\t\t\t\t\t\t\t\tif (statesSlect) {\n\t\t\t\t\t\t\t\t\t\tdisplayStateLandData(selection);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tdisplayTribeLandData(selection);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}>2000</div>\n\t\t\t\t\t\t\t\t<div className={\"w-20 ba mh3 \" + (selection === \"y2010\" ? \" bg-light-gray \" : \"\")} onClick={() => {\n\t\t\t\t\t\t\t\t\tsetSelection(\"y2010\")\n\t\t\t\t\t\t\t\t\tif (statesSlect) {\n\t\t\t\t\t\t\t\t\t\tdisplayStateLandData(selection);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tdisplayTribeLandData(selection);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}> 2010</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t<div className={\"flex justify-center\"}>\n\t\t\t\t\t\t\t\t\t{<ColumnChart data={stateColumnData} />}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default MapChart;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport MapChart from \"./MapChart\";\n\nclass App extends Component {\n  constructor() {\n    super();\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <MapChart />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}